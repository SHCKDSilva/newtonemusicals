// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.
@import './styles/components/variables';
@import './styles/components/grid';
@import './styles/themes/dark-theme';
@import './styles/themes/light-theme';
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

$cyan-palette: (
  50: #e0f7fa,
  100: #b2ebf2,
  200: #80deea,
  300: #4dd0e1,
  400: #26c6da,
  500: #00bcd4,
  600: #00acc1,
  700: #0097a7,
  800: #00838f,
  900: #006064,
  A100: #ffffff,
  A200: #e9e7ff,
  A400: #b9b4ff,
  A700: #a29bff,
  contrast: (
    50: #000000,
    100: #000000,
    200: #000000,
    300: #000000,
    400: #000000,
    500: #ffffff,
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$vimbal-light-primary: mat.define-palette($cyan-palette, 900);
$vimbal-dark-primary: mat.define-palette(mat.$blue-palette, A100);

$vimbal-light-accent: mat.define-palette(mat.$orange-palette, A100);
$vimbal-dark-accent: mat.define-palette(mat.$blue-palette, A100);

// The warn palette is optional (defaults to red).
$vimbal-light-warn: mat.define-palette(mat.$red-palette, 600);
$vimbal-dark-warn: mat.define-palette(mat.$red-palette, A100);

$vimbal-dark-text-palette: mat.define-palette(mat.$gray-palette);
// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$vimbal-light-theme: mat.define-light-theme(
  (
    color: (
      primary: $vimbal-light-primary,
      accent: $vimbal-light-accent,
      warn: $vimbal-light-warn,
    ),
  )
);

$vimbal-dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $vimbal-dark-primary,
      accent: $vimbal-dark-accent,
      warn: $vimbal-dark-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($vimbal-light-theme);

.dark-theme {
  @include mat.all-component-colors($vimbal-dark-theme);
  color: mat.get-color-from-palette($vimbal-dark-text-palette, 'darker-contrast');

  .mat-form-field.mat-focused .mat-form-field-ripple {
    background-color: mat.get-color-from-palette($vimbal-dark-accent);
  }

  .mat-form-field-appearance-fill.mat-focused .mat-form-field-label {
    color: mat.get-color-from-palette($vimbal-dark-accent);
  }

  .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
    color: mat.get-color-from-palette($vimbal-dark-accent);
  }

  .mat-form-field-appearance-outline.mat-focused .mat-form-field-label {
    color: mat.get-color-from-palette($vimbal-dark-accent);
  }
}

@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, 'Helvetica Neue', sans-serif;
}

/* width */
::-webkit-scrollbar {
  width: 5px;
  height: 5px;
}

/* Track */
::-webkit-scrollbar-track {
  background: transparent;
}

/* Handle */
::-webkit-scrollbar-thumb {
  border-radius: 20px;
  background: rgba(136, 136, 136, 0.5);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: rgb(78, 78, 78);
}

.mat-form-field {
  width: 100%;
}

// .mat-dialog-override {
//   mat-dialog-container {
//     > :first-child {
//       display: flex;
//       flex-direction: column;
//       height: 100%;
//     }
//     mat-dialog-content,
//     div[mat-dialog-content] {
//       flex-grow: 1;
//       max-height: unset;
//     }
//   }
// }

mat-card {
  border-radius: 1em !important;
}
